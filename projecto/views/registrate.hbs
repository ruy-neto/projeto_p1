{{> header}}
<div id="app">
    <div class="container-fluid">
        <div class="row">
            <div class="col d-flex justify-content-center">
                <video ref="video" class="w-50 h-auto"  autoplay></video>
                <canvas ref="canvas"  class="w-100 h-auto" style="display: none;"></canvas>
            </div>
        </div>
    </div>

</div>

<script>
    const app = Vue.createApp({
        data() {
            return {
                message: 'Olá, Vue.js!',
                optionRank:1,
                active: 'active',
                standard:'nav-item',
                qrCodeResult: ''
            }
        },
        mounted() {
            const video = this.$refs.video;
            const canvas = this.$refs.canvas;
            const context = canvas.getContext('2d');

            navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } })
            .then((stream) => {
                video.srcObject = stream;
                video.play();
                this.tick(); // Inicia o processamento do QR code
            })
            .catch((error) => {
                console.error('Erro ao acessar a câmera:', error);
            });
        },
        methods: {
            tick() {
                const video = this.$refs.video;
                const canvas = this.$refs.canvas;
                const context = canvas.getContext('2d');
                console.log("Chamei função tick");
                if (video.readyState === video.HAVE_ENOUGH_DATA) {
                    canvas.width = video.videoWidth;
                    canvas.height = video.videoHeight;
                    context.drawImage(video, 0, 0, canvas.width, canvas.height);
                    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
                    const code = jsQR(imageData.data, imageData.width, imageData.height); // Processa o QR code
                    if (code) {
                        this.qrCodeResult = code.data; // Atualiza o resultado do QR code
                        console.log(this.qrCodeResult);
                    } else{

                    }
                }
                requestAnimationFrame(() => this.tick()); // Chama a função tick() novamente no próximo quadro de vídeo
            },
            updateTab(newValue) {
            // Atualiza o valor da variável com o valor passado como argumento
                this.selectedTab = newValue;
            },
            showList(){
                return this.optionRank == 1;
            },
            showCreate() {
                return this.optionRank == 0;
            }
        }
    });

    app.mount('#app');
</script>